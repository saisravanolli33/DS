/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode ReverseList(ListNode head) {
        if(head==null)return head;
        if(head.next==null) return head;
        ListNode res= new ListNode();
    ListNode Current=head;
        Stack st= new Stack();
        while(Current!=null){
            st.Push(Current.val);
            Current=Current.next;
        }
        Current=res;
        while(st.Count>0){
            Current.val=(int)st.Pop();
            if(st.Count!=0){
                Current.next=new ListNode();
                Current=Current.next;
            }          
            
        }
        return res;
    }
}
